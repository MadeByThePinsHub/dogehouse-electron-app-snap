name: dogehouse
version: '0.1'
summary: Taking conversations into the moon
description: |
  DoegHouse is an Discord-like voice chats service, powered by
  DogeCoin, to take voice-based conversations into the moon.

# Since we're still testing the Electron app, we'll go into
# the edge/devel channel.
grade: devel

# Chnage this into strict once the essentials are added
confinement: devmode

# Ensure that keep things up-to-date with the latest LTS as possible
# but since Gnome 3.x wants Ububtu Core 18, we need to change that
# into core18 until they support Core 20 finally.
base: core18

# WORK IN PROGRESS / PLEASE PROCEED AT YOUR OWN RISK
# Sidenote: This was copied from https://www.electronjs.org/docs/tutorial/snapcraft#step-1-create-sample-snapcraft-project
# and requires additional work and testing.
apps:
  dogehouse:
    command: dogehouse/dogehouse --no-sandbox
    # but actually there's it!
    # just make sure you update your base into core20
    # But no, Linus has lied to Ben, again. Blame Snapcraft devs why.
    extensions: [gnome-3-28]
    plugs:
      - network
      - network-bind
      - audio-playback
      - network-status
      - audio-record
      - x11
    environment:
      # Correct the TMPDIR path for Chromium Framework/Electron to ensure
      # libappindicator has readable resources.
      TMPDIR: $XDG_RUNTIME_DIR
parts:
  dogehouse:
    plugin: nil
    source: https://github.com/benawad/dogehouse.git
    build-environment:
      - PATH: "$PATH:$SNAPCRAFT_PART_BUILD/node_modules/.bin"
    override-build: |
        PATH=$PATH:$SNAPCRAFT_PART_SRC/../npm/bin
        npm config set unsafe-perm True

        # workaround for build.snapcraft.io builds
        # https://bugs.launchpad.net/bugs/1886861
        if [ -n "$http_proxy" ]; then
           export ELECTRON_GET_USE_PROXY=1
           export GLOBAL_AGENT_HTTP_PROXY="${http_proxy}"
           export GLOBAL_AGENT_HTTPS_PROXY="${http_proxy}"
        fi

        cd baklava
        npm install --production=false
        npx electron-packager . DogeHouse --icon=./icons/icon.png --overwrite --platform=linux --output=release-build --prune=true
        cp -rv ./DogeHouse-* $SNAPCRAFT_PART_INSTALL/dogehouse
    build-snaps:
    - node/14/stable
    build-packages:
    - unzip
    stage-packages:
    - libnss3
    - libnspr4
